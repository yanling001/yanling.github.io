/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }

   给定一个链表和一个特定值 x，对链表进行分隔，使得所有小于 x 的节点都在大于或等于 x 的节点之前。

你应当保留两个分区中每个节点的初始相对位置。

示例:

输入: head = 1->4->3->2->5->2, x = 3
输出: 1->2->2->4->3->5
题解思路：
            beforehead
            afterhead
弄两个链表一个接比小的节点值，一个接比x值大的节点
最后将两个链表接在一起。
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
           ListNode beforehead=new ListNode(0);
           ListNode afterhead=new ListNode(0);
           ListNode before=beforehead;
           ListNode after=afterhead;
           while (head!=null) {
               if (head.val < x) {
                   before.next = head;
                    before=before.next ;
               } else{
                   after.next = head;
                   after=after.next;
               }
               head = head.next;
           }
           after.next=null;
           before.next=afterhead.next;
           return beforehead.next;
    }
}
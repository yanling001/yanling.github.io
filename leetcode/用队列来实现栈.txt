class MyStack {

   Queue<Integer> queue1;
    Queue<Integer> queue2;
    int top;
    /** Initialize your data structure here. */
    public MyStack() {
        queue1=new LinkedList(); 
        queue2=new LinkedList();
        
    }

    /** Push element x onto stack. */
    public void push(int x) {
        queue1.add(x);
        top=x;
    }

    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
         while (queue1.size()>1){
             int temp=queue1.poll();
             top=temp;
             queue2.add(temp);
         }
         int tem=queue1.poll();
         Queue<Integer> temp=queue1;
         queue1=queue2;
         queue2=temp;
         return tem;
    }

    /** Get the top element. */
    public int top() {
       return top;
    }

    /** Returns whether the stack is empty. */
    public boolean empty() {
         return queue1.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */